//////////////////////////////////////////////////////20200808/////////////////////////////////////////////////////////
//Дан массив слов. Найдите количество слов длиной 5.
const arr = ['solar', 'constellation', 'launch', 'Nebula'];
let wordsOf5Letters = 0;
for (let i = 0; i < arr.length; i++) {
  if (arr[i].length === 5) {
    wordsOf5Letters++;
  }
}
//Найти минимальное значение в массиве.
const arr = [57, 89, -12, 73, -99, 4, 0];
let min = arr[0];
for (let i = 0; i < arr.length; i++) {
  if (arr[i] < min) {
    min = arr[i];
  }
}
//////////////////////////////////////////////////////20200809/////////////////////////////////////////////////////////
//Hello Name!
function greetings(name){
  if (name) return `Hello ${name}!`;
  else return 'Hello!';
}
//Периметр треугольника
function perimeterOfTriangle(a, b, c){
  return (a < b + c && b < a + c && c < a + b) ? a + b + c : 'The triangle does not exist';
}
//Площадь треугольника
function areaOfTriangle(a, b, c){
  let p = (a + b + c) / 2;
  return (a < b + c && b < a + c && c < a + b) ? (p * (p - a) * (p - b) * (p - c)) ** 0.5 : 'The triangle does not exist';
}
//Последняя цифра числа
function lastDigit(number){
  return number % 10;
}
//Факториал числа
function factorial(number){
  if (number === 0) return 1;
  else if (number < 0) return 0;
  else return number * factorial(number - 1);
}
//Сумма чисел от 1 до n.
function sum(n){
  if (n === 0) return 0;
  else if (n === 1) return 1;
  else return n + sum(n - 1);
}
//Большее из трех чисел
function max(x, y, z){
  if (x > y && x > z) return x;
  else if (y > x && y > z) return y;
  else return z;
}
//Заполнить массив числами от 1 до n.
function fillArray(n){
  const result = [];
  for (let i = 0; i < n; i++) {
    result.unshift(n - i);
}
  return result;
}
//Заполнить массив числами от n до m.
function fillArray(n, m){
const result = [];
for (let i = 0; i < 1 + m - n; i++) {
result.push(n + i);
}
return result;
}

//////////////////////////////////////////////////////20200810/////////////////////////////////////////////////////////
//Заполнить массив четными числами от 2 до n.
function fillArray(n){
  const result = [];
  for (let i = 2; i <= n; i++){
    if (i % 2 === 0) result.push(i);
  }
  return result
}
//Количество цифр в числе
function numberOfDigits(number){
  let count = 0;
  let last;
  while (number > 0){
    last = number % 10;
    number = (number - last) / 10;
    count++
  }
  return count
}
//Описание числа
function describesNumber(number){
if (number > 0 && number % 2 === 0) return 'Even positive number';
else if (number < 0 && number % 2 === 0) return 'Even negative number';
else if (number > 0 && number % 2 !== 0) return 'Odd positive number';
else if (number < 0 && number % 2 !== 0) return 'Odd negative number';
else return 'Zero';
}
//Сумма элементов массива
function sumOfArray(arr){
  let sum = 0;
  for (let i = 0; i < arr.length; i++) {
    sum = sum + arr[i];
  }
  return sum;
}
//Произведение элементов массива
function productOfArray(arr){
  let product = 1;
  let i = 0;
  do {
    if (arr.length !== 0) {
      product = product * arr[i];
    }
    else {
     product = 0;
    }
    i++;
  } while (i < arr.length)
  return product;
}
//////////////////////////////////////////////////////20200811/////////////////////////////////////////////////////////
//Среднее арифметическое элементов массива
function average(arr){
  let sum = 0;
  let avg = 0;
  let i = 0;
  do {
    if (arr.length !== 0) {
      sum = sum + arr[i];
      avg = sum / arr.length;
    }
    else {
      avg = 0;
    } i++;
  } while (i < arr.length);
  return avg
}
//Сумма положительных элементов массива
function sumOfPositive(arr){
  let sum = 0;
  for (let i = 0; i < arr.length; i++) {
    if (arr[i] > 0) {
      sum = sum + arr[i];
    }
  }
  return sum;
}
//Сумма отрицательных элементов массива
function sumOfNegative(arr){
  let sum = 0;
  for (let i = 0; i < arr.length; i++) {
    if (arr[i] < 0) {
      sum = sum + (arr[i]);
    }
  }
  return sum;
}
//Количество положительных элементов массива
function countOfPositive(arr){
  let count = 0;
  for (let i = 0; i < arr.length; i++) {
    if (arr[i] > 0) {
      count++;
    }
  }
  return count;
}
//Количество отрицательных элементов массива
function countOfNegative(arr){
  let count = 0;
  for (let i = 0; i < arr.length; i++) {
    if (arr[i] < 0) {
      count++;
    }
  }
  return count;
}
//////////////////////////////////////////////////////20200812/////////////////////////////////////////////////////////
//Индекс первого отрицательного элемента массива
function indexOfFirstNegative(arr){
  let noNegative = 'no negative elements';
  for (let i = 0; i < arr.length; i++) {
    if (arr[i] < 0) {
      noNegative = i;
      break;
    }
  }
  return noNegative;
}
//////////////////////////////////////////////////////20200813/////////////////////////////////////////////////////////
//Количество чисел в смешанном массиве
function countOfNumbers(arr){
  let count = 0;
  for (let i = 0; i < arr.length; i++) {
    if (arr[i] / 1 === arr[i]) {
    count++;
    }
  }
return count;
}
//Количество слов, состоящих из 5 букв.
function countOfWordsOf5Letters(arr){
  let count = 0;
  for (let i = 0; i < arr.length; i++) {
    if (arr[i].length === 5) {
      count++;
    }
  }
  return count;
}

//////////////////////////////////////////////////////20200815/////////////////////////////////////////////////////////
//Напишите функцию, которая выводит в консоль песню Happy birthday!
function happyBirthday(name){
  let str = 'Happy birthday to you';
  return str + '\n' + str + '\n' + `Happy birthday dear ${name}` + '\n' + str + '.';
}
//////////////////////////////////////////////////////20200816/////////////////////////////////////////////////////////
//Обмен значений переменных
function changeValues(a, b){
  let temp = a;
  a = b;
  b = temp;
  return [a, b];
}
//Решение линейного уравнения ax + b = 0
function equation(a, b){
let x = b / a;
return -x;
}
//////////////////////////////////////////////////////20200819/////////////////////////////////////////////////////////
//Если аргумент является числом, увеличить его на 1
function numbersIncrement(value){
  if (typeof value === 'number') return ++value;
  else return 'It is not a number';
}
//Есть ли среди аргументов строки?
function isThereAString(value1, value2){
  if (typeof value1 === 'string' || typeof value2 === 'string') return 'String received';
  else return 'There are no strings';
}
//Перевод логического значения на английский язык
function booleanTranslate(value){
  if (typeof value === 'boolean' && value === true) return 'Truth';
  else if (typeof value === 'boolean' && value === false) return 'Lie';
  else return 'Not a boolean value';
}
//////////////////////////////////////////////////////20200823/////////////////////////////////////////////////////////
// Типы данных. Если число, то умножить на 2, если строка, то вернуть значение + ! знак.
function bugsFixing(value) {
  if (typeof value === 'number') return value * 2;
  else if (typeof(value) === 'string') return `${value}!`;
  else return 'Wrong value';
}
//Сколько чисел содержит массив?
function countNumbers(arr){
let count = 0;
  for (let elm of arr) {
    if (typeof elm === 'number') {
    count++;
    }
  }
return count;
}
//Представьте результат сложения двух чисел в виде строки.
function arithmeticExpression(a, b){
  let c = a + b;
  return a + ' + ' + b + ' = ' + c;
}
//Сумма строк как сумма чисел
function sumOfStr(a, b){
let c = +a + +b;
return String(c);
}
function sumOfStr(a, b){
return String(+a + +b);
}
//Сумма трех булевых величин, возвратить строку.
function sumOfBoolean(a, b, c){
  return String(Boolean(+a) + Boolean(+b) + Boolean(+c));
}
//////////////////////////////////////////////////////20200823/////////////////////////////////////////////////////////
//Среднее арифметическое двух чисел, округленное до 2-х знаков.
function average(a, b){
  return ((a + b) / 2).toFixed(2);
}
//Площадь закрашенной фигуры. Требуется найти площадь фигуры,
//которая представляет собой квадрат со стороной a, в котором вырезано квадратное отверстие со стороной b (a > b).
function area(a, b){
  let squareBig = Math.pow(a, 2);
  let squareSmall = Math.pow(b, 2);
  return squareBig - squareSmall;
}
//Площадь круга
function circleArea(r){
  return Math.round(Math.PI * Math.pow(r, 2));
}
//Длина окружности, d - диаметр окружности
function circleLength(d){
  return (Math.PI * d).toFixed(2);
}
//Даны два числа. Найдите сумму, разность, произведение и частное их квадратов в виде массива из четырех значений.
function squareOperations(a, b){
  return [Math.pow(a, 2) + Math.pow(b, 2), Math.pow(a, 2) - Math.pow(b, 2), Math.pow(a, 2) * Math.pow(b, 2),
  Math.round(Math.pow(a, 2) / Math.pow(b, 2))];
}
//Cумма, разность, произведение и частное абсолютных величин (модулей) двух чисел в виде массива.
function absoluteValuesOperations(a, b){
  return [Math.abs(a) + Math.abs(b), Math.abs(a) - Math.abs(b), Math.abs(a) * Math.abs(b),
  Math.round(Math.abs(a) / Math.abs(b))];
}
//Гипотенуза прямоугольного треугольника. Значение гипотенузы округлите вверх до ближайшего большего целого.
function hypotenuse(a, b){
  return Math.ceil(Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2)));
}
//Площадь кольца, ограниченного двумя окружностями
function ringArea(r1, r2){
  return Math.floor((Math.PI * Math.pow(r1, 2)) - (Math.PI * Math.pow(r2, 2)));
}
//////////////////////////////////////////////////////20200825/////////////////////////////////////////////////////////
//Найдите площадь круга, если известна длина окружности, результат округлите.
function circleArea(circleLength){
  let r = circleLength / (2 * Math.PI);
  return Math.round(Math.PI * Math.pow(r, 2));
}
//Стороны прямоугольника параллельны координатным осям. Найдите периметр и площадь прямоугольника.
function rectangle(x1, y1, x2, y2){
 let a = Math.abs(y2 - y1);
 let b = Math.abs(x2 - x1);
 return [2 * a + 2 * b, a * b];
}
//Угол в радианной мере.
function angleInRadians(angle){
  return Math.round(angle * Math.PI / 180);
}
//Стоимость бензина, округленную до двух десятичных знаков, в виде числа.
function fuelPrice(litres, pricePerLitre){
  return Number((litres * pricePerLitre).toFixed(2));
}
//Стоимость заказа в ресторане. Результат округлите до двух десятичных знаков.
function totalPrice(price, tipPercent, taxPercent){
  return +(price + (price * tipPercent / 100) + (price * taxPercent / 100)).toFixed(2)
}
//////////////////////////////////////////////////////20200830/////////////////////////////////////////////////////////
//Проверьте истинность утверждения "Все цифры трехзначного числа различны".
function areAllDigitsDifferent(num){
  num = num + '';
  if (num[0] !== num[1] && num[1] !== num[2] && num[2] !== num[0]) return true;
  else return false;
}
//Проверьте истинность утверждения "Все цифры трехзначного числа упорядочены по возрастанию".
function areDigitsInAscendingOrder(num){
  num = num + '';
  if (num[0] < num[1] && num[0] < num[2] && num[1] < num[2]) return true;
  else return false;
}
//Является ли трехзначное число палиндромом?
function isPalindrome(num){
  num = String(num)
  if (num[0] + num[1] === num[2] + num[1]) return 'palindrome';
  else return 'not a palindrome';
}
//////////////////////////////////////////////////////20200831/////////////////////////////////////////////////////////
//Количество положительных чисел в наборе
function countOfPositive(a, b, c){
  let arr = [a, b, c];
  let count = 0;
  for (let i = 0; i < arr.length; i++){
    if (arr[i] > 0) {
      count++;
    }
  }
  return count;
}
//Количество положительных и количество отрицательных чисел в наборе
function countOfPosAndNeg(a, b, c){
  let arr = [a, b, c];
  let countPos = 0;
  let countNeg = 0;
  for (let i = 0; i < arr.length; i++){
    if (arr[i] > 0) {
    countPos++;
    }
  }
  for (let j = 0; j < arr.length; j++){
    if (arr[j] < 0){
      countNeg++;
    }
  }
  return [countPos, countNeg];
}
//Большее из двух чисел
function largerOfTwo(a, b){
  if (a > b) return a;
  if (b > a) return b;
  else return a;
}
//////////////////////////////////////////////////////20200901/////////////////////////////////////////////////////////
//Меньшее из трех чисел
function minOfThree(a, b, c){
  return Math.min(a, b, c);
}
//Не самое большое и не самое маленькое число
function middleOfThree(a, b, c){
  let arr = [a, b, c];
  let min = Math.min(...arr);
  let max = Math.max(...arr);
  for (let elm of arr) {
    if (elm > min && elm < max) return elm;
  }
}
//////////////////////////////////////////////////////20200903/////////////////////////////////////////////////////////
//Минимальное и максимальное из трех чисел.
function minAndMax(a, b, c){
  let arr = [a, b, c];
  let max = arr[0];
  let min = arr[0];
  for (let i = 0; i < arr.length; i++){
    if (arr[i] > max){
      max = arr[i];
    }
    if (arr[i] < min) {
      min = arr[i];
    }
  }
  return [min, max];
}
//////////////////////////////////////////////////////20200905/////////////////////////////////////////////////////////
//Сумма двух наибольших чисел.
function sumOfTwoLargest(a, b, c){
  let arr = [a, b, c];
  let arrSum = [];
  let least = arr[0];
  for (let elm of arr) {
    if (elm < least){
      least = elm;
    }
  }
  for (let elm of arr){
    if (elm > least){
      arrSum.unshift(elm);
    }
  }
  return arrSum[0] + arrSum[1];
}
//Если величины расположены в порядке возрастания, удвойте каждую величину,
//иначе присвойте каждой величине противоположное значение.
function newValues(a, b, c){
  if (b > a  && c > b) return [a * 2, b * 2, c * 2];
  else return [-a, -b, -c];
}
//Найти порядковый номер величины, отличающейся от двух других
function orderNumberOfDifferentValue(a, b, c){
  if (a !== b && a !== c) return 1;
  if (b !== a && b !== c) return 2;
  if (c !== a && c !== b) return 3;
}
//У какой фигуры площадь больше?
function areaComparison(r, a){
  let circleS = Math.PI * Math.pow(r, 2);
  let squareS = Math.pow(a, 2);
  return (circleS > squareS) ? 'circle' : (squareS > circleS ) ? 'square' : 'the same';
}
// Какая точка ближе к началу координат?
function distanceComparison(x1, y1, x2, y2){
  if (Math.abs(Math.pow(x1, 2)) + Math.abs(Math.pow(y1, 2)) < Math.abs(Math.pow(x2, 2)) + Math.abs(Math.pow(y2, 2)))
  return 1;
  else if (Math.abs(Math.pow(x1, 2)) + Math.abs(Math.pow(y1,2)) > Math.abs(Math.pow(x2, 2)) + Math.abs(Math.pow(y2, 2)))
  return 2;
  else return 0;
}
//////////////////////////////////////////////////////20200908/////////////////////////////////////////////////////////
//Упорядочены ли цифры в числе?
function ascendingOrDescendingOrder(num){
  num = num + '';
  if (num[0] < num[1] && num[1] < num[2]) return 'ascending order';
  if (num[0] > num[1] && num[1] > num[2]) return 'descending order';
  else return 'no order';
}
//Существует ли треугольник со сторонами a, b, c?
function triangle(a, b, c) {
  return (a + b > c && b + c > a && c + a > b) ? 'The triangle exists' : 'The triangle does not exist';
}
//Дан номер месяца (число от 1 до 12). Получить время года (зима, весна, лето, осень).
function season(month){
  switch (month) {
    case 1:
    case 2:
    case 12:
    return 'Winter';
    break;
    case 3:
    case 4:
    case 5:
    return 'Spring';
    break;
    case 6:
    case 7:
    case 8:
    return 'Summer';
    break;
    default: return 'Fall';
  }
}
//True, если радуга содержит этот цвет, и false в противном случае.
function rainbowСolor(color){
  let arr = ['red', 'orange', 'yellow', 'green', 'blue', 'indigo', 'violet'];
  for (let i = 0; i < arr.length; i++){
    if (color === arr[i]) return true;
  }
  return false;
}
//Счастливые числа в Японии 8, 3, 5, 7
function luckyNumber(a, b){
  let arr = [8, 3, 5, 7];
  for (let i = 0; i < arr.length; i ++){
    if (a === arr[i] || b === arr[i]) return true;
  }
  return false;
}
//Являются ли эти числа “Пифагоровой тройкой”
function pythagoreanThree(a, b, c){
  return (a ** 2 + b ** 2 === c ** 2 || b ** 2 + c ** 2 === a ** 2 || c ** 2 + a ** 2 === b ** 2) ? true : false;
}
//////////////////////////////////////////////////////20200909/////////////////////////////////////////////////////////
//Если a не равно b
function newValues(a, b){
  let newNumber = Math.max(a, b);
  return (a !== b) ? [newNumber, newNumber] : [0, 0];
}
//////////////////////////////////////////////////////20200910/////////////////////////////////////////////////////////
//За решение задачи уровня "easy" начисляется 2 балла, за решение задачи уровня "medium" начисляется 4 балла,
//за решение задачи уровня "hard" начисляется 8 баллов.
function scoreIncrease(current, level){
  return (level === 'easy') ? current + 2 : (level === 'medium') ? current + 4 : current + 8;
}
//Торговец фруктов продает манго по 1 доллару за штуку. Если берет 3 и больше, то за 1 фрукт торговец просит 0.8$.
//Если покупают 10 штук и более, то продавец готов продать их всего по 60 центов за штуку.
function saleFruits(n){
  return (n >= 10) ? (n * 0.6).toFixed(2) : (n >= 3) ? (n * 0.8).toFixed(2) : (n * 1).toFixed(2);
}
//////////////////////////////////////////////////////20200911/////////////////////////////////////////////////////////
//Приветствие на разных языках
function greetings(name, language){
  switch(name, language){
    case 'English': return `Hello ${name}!`;
    break;
    case 'German': return `Hallo ${name}!`;
    break;
    case 'French': return `Bonjour ${name}!`;
    break;
    case 'Spanish': return `Hola ${name}!`;
    break;
    case 'Italian': return `Saluto ${name}!`;
    break;
    case 'Russian': return `Привет ${name}!`;
    break;
    case 'Czech': return `Nazdar ${name}!`;
    break;
    default: return `Hello ${name}!`;
  }
}
//Арифметические операции
function calculate(a, b, operation){
  switch(operation){
    case '+': return `${a} ${operation} ${b} = ${Math.round(a + b)}`;
    break;
    case '-': return `${a} ${operation} ${b} = ${Math.round(a - b)}`;
    break;
    case '*': return `${a} ${operation} ${b} = ${Math.round(a * b)}`;
    break;
    case '/': return `${a} ${operation} ${b} = ${Math.round(a / b)}`;
    break;
    case '%': return `${a} ${operation} ${b} = ${Math.round(a % b)}`;
    break;
  }
}
//////////////////////////////////////////////////////20200913/////////////////////////////////////////////////////////
//Дано целое число k (от 1 до 365). Если считать, что 1 января был понедельник. Какой это день недели?
function dayOfWeek(k){
  for (let i = k; i >= 0; i -= 7){
    switch(i){
      case 0: return 'Sunday';
      break;
      case 1: return 'Monday';
      break;
      case 2: return 'Tuesday';
      break;
      case 3: return 'Wednesday';
      break;
      case 4: return 'Thursday';
      break;
      case 5: return 'Friday';
      break;
      case 6: return 'Saturday';
      break;
    }
  }
}
//Найти частное и остаток от деления без использования операций деления и нахождения остатка
function quotientAndRemainder(n, k){
  let quotient = 0;
  let remainder = 0;
  while (n >= k){
    n = n - k;
    quotient++;
  }
  remainder = n;
  return [quotient, remainder];
}
//Является ли число степенью 3?
function powerOf3(n){
  for (let i = 0; i < n; i++){
    while(3 ** i === n){
    return true;
    }
  }
  return false;
}
//////////////////////////////////////////////////////20200914/////////////////////////////////////////////////////////
//Найдите степень числа 2
function powerOf2(n){
  for (let k = 0; k < n; k++){
    while(2 ** k === n){
      return k;
    }
  }
}
//Сумма чисел от 1 до n.
function sum(n){
let sumNumber = 0;
let i = 0;
  while (i <= n){
    sumNumber = sumNumber + i;
    i++;
  }
  return sumNumber;
}
//Найдите факториал числа n
function factorial(n){
  let factorialNumber = 1;
  let i = 1;
  while(i <= n){
    factorialNumber = factorialNumber * i;
    i++;
  }
  return factorialNumber;
}
//Сумма нечетных чисел от 1 до n.
function sumOfOdd(n){
  let sum = 0;
  let i = 1;
  while(i <= n){
    sum = sum + i;
    i += 2;
  }
  return sum;
}
//Произведение четных чисел от 1 до n.
function multOfEven(n){
  let sum = 1;
  let i = 2;
  while(i <= n){
    sum = sum * i;
    i += 2;
  }
  return sum;
}
//Сумма цифр числа n
function sumOfDigits(n){
  n = n + '';
  let sum = 0;
  let i = 0;
  while(i < n.length){
    sum = sum + +n[i];
    i++
  }
  return sum;
}
//Сколько цифр содержит число? Запрещено использовать методы и свойства строк и массивов.
function numberOfDigits(n){
  let count = 0;
  while(n > 1){
    n /= 10;
    count++;
  }
  return count;
}
//Ученик учит английские слова. В первый день занятий он выучил 5 английских слов.
//В каждый последующий день он выучивал на 2 слова больше, чем в предыдущий.
//Через сколько дней ученик будет знать не менее n английских слов?
function englishWords(n){
  let count = 0;
  let i = 5;
  while(n > 0){
    n = n - i;
    count++;
    i += 2;
  }
  return count;
}
//////////////////////////////////////////////////////20201020/////////////////////////////////////////////////////////
//Число простое или нет? Простое число делится только на себя и на 1.
function isPrime(n){
  let count = 0;
  for (let i = 1; i <= n; i++){
    if (n % i === 0) {
    count++;
    }
  }
  return (count > 2) ? false : (count === 1) ? false : true;
}
//////////////////////////////////////////////////////20201021/////////////////////////////////////////////////////////
//Возведение в степень путем многократного умножения
function power(a, n){
  let res = a;
  for (let i = 1; i < n; i++){
    res *= a;
  }
  return (n === 0) ? 1 : res;
}
//////////////////////////////////////////////////////20201027/////////////////////////////////////////////////////////
//Последовательность Фибоначчи
function fibonacciNumbers(n){
  let arrayFibNum = [0, 1];
  for (let i = 2; i < n; i++){
    arrayFibNum[i] = arrayFibNum[i - 1] + arrayFibNum[i - 2];
  }
  return (n === 0) ? [0] : (n === 1) ? [0, 1] : arrayFibNum;
}
//////////////////////////////////////////////////////20201119/////////////////////////////////////////////////////////
//Царевна-лягушка съедает ежедневно на 3 комара больше, чем в предыдущий день.
//Определите, в какой день количество съеденных комаров превысит 1000, если в первый день было съедено n комаров.
function frogPrincess(n){
  let i = 1;
  let count = n;
  let sum = n;
  do {
    count += 3;
    sum += count;
    i++;
} while (sum <= 1000);
return i;
}
//////////////////////////////////////////////////////20201122/////////////////////////////////////////////////////////
//Начав тренировки, спортсмен в первый день занятий пробежал n км. Каждый последующий день он увеличивал норму на 10%
//от нормы предыдущего дня. Определите, сколько километров пробежит спортсмен в 10-й день занятий.
function running(n){
  let day = 1;
  let runningOneDay = n;
  do {
    runningOneDay *= 1.10;
    day++;
  } while (day < 10);
return Math.round(runningOneDay);
}
//////////////////////////////////////////////////////20201128/////////////////////////////////////////////////////////
//Вкладчик положил 1000 долларов в банк. Ежегодно эта сумма увеличивается на p (p > 0) % от начальной суммы вклада.
//Через сколько лет на счету будет 1500 долларов?
function bankPercent(p){
  let deposit = 1000;
  let years = 0;
  let percentage = deposit * p / 100;
  do {
    deposit += percentage;
    years++
  } while (deposit < 1500);
return years;
}
//Вкладчик положил некоторое количество денег в банк. Ежегодно эта сумма увеличивается на percent (percent > 0)
//процентов от текущей суммы вклада. Определите, какая сумма денег будет на счету через period лет?
function bankPercent(money, percent, period){
let count = 0;
  do {
    money = money + (money * percent / 100);
    count++;
  } while (count < period);
return money.toFixed(2);
}